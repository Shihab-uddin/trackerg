generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(uuid())
  name      String
  email     String    @unique
  password  String
  role      Role
  tasks     Task[]    @relation("AssignedTasks")
  createdProjects Project[] @relation("CreatedProjects")
  projectMembers  ProjectMember[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}


model Project {
  id          String          @id @default(uuid())
  name        String
  description String?
  createdBy   User            @relation("CreatedProjects", fields: [createdById], references: [id])
  createdById String

  projectMembers ProjectMember[]
  tasks       Task[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ProjectMember {
  id        String   @id @default(uuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  project   Project  @relation(fields: [projectId], references: [id])
  projectId String

  role      Role     // optional: specific role within the project

  createdAt DateTime @default(now())
}

model Task {
  id          String     @id @default(uuid())
  title       String
  description String?
  status      TaskStatus @default(TODO)
  priority    Priority   @default(MEDIUM)
  dueDate     DateTime?

  assignedTo  User?      @relation("AssignedTasks", fields: [assignedToId], references: [id])
  assignedToId String?

  project     Project    @relation(fields: [projectId], references: [id])
  projectId   String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum Role {
  ADMIN
  MANAGER
  DEVELOPER
}

enum TaskStatus {
  TODO
  IN_PROGRESS
  DONE
}

enum Priority {
  LOW
  MEDIUM
  HIGH
}

